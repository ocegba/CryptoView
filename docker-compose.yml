version: "3.7"

services:

    zookeeper:
      image: "bitnami/zookeeper:latest"
      container_name: zookeeper
      networks:
        - cryptoViz
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes


    kafka1:
      image: "bitnami/kafka:latest"
      container_name: kafka1
      networks:
        - cryptoViz
      ports:
        - "9092:9092"
      environment:
        - KAFKA_BROKER_ID=1
        - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
        - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092"
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CREATE_TOPICS="kafka-nifi-src:1:3,kafka-nifi-dst:1:3,kafka-final:1:3"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zookeeper
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 1G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always

    kafka2:
      image: "bitnami/kafka:latest"
      container_name: kafka2
      networks:
        - cryptoViz
      ports:
        - "9093:9092"
      environment:
        - KAFKA_BROKER_ID=2
        - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092"
        - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
        - ALLOW_PLAINTEXT_LISTENER=yes
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zookeeper
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 1G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always

    kafka3:
      image: "bitnami/kafka:latest"
      container_name: kafka3
      networks:
        - cryptoViz
      ports:
        - "9094:9092"
      environment:
        - KAFKA_BROKER_ID=3
        - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092"
        - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
        - ALLOW_PLAINTEXT_LISTENER=yes
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zookeeper
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 1G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always


    spark-master:
      image: bitnami/spark:latest
      ports:
        - "7077:7077"
      networks:
        - cryptoViz
      environment:
        - SPARK_MODE=master

    spark-worker:
      image: bitnami/spark:latest
      networks:
        - cryptoViz
      ports:
        - "8081:8081"
      environment:
        - SPARK_MODE=worker
        - SPARK_MASTER_URL=spark://spark-master:7077
      restart: always


    kafka-producer:
      build:
        context: ./kafka/producer
        dockerfile: Dockerfile
      container_name: kafka-producer
      environment:
        BINANCE_WEBSOCKETS: "wss://stream.binance.com:9443/ws/btcusdt@kline_1m"
        TOPIC: kafka-nifi-src
        BOOTSTRAP_SERVER: "kafka1:9092,kafka2:9092,kafka3:9092"
      networks:
        - cryptoViz
      depends_on:
        - kafka1
        - kafka2
        - kafka3
        - nifi
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 2G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always

    kafka-consumer:
      build:
        context: ./kafka/consumer
        dockerfile: Dockerfile
      container_name: kafka-consumer
      environment:
        TOPIC: kafka-nifi-dst
        BOOTSTRAP_SERVER: "kafka1:9092,kafka2:9092,kafka3:9092"
        PRODUCER_TOPIC: kafka-final
      networks:
        - cryptoViz
      volumes:
        - ./kafka/consumer/app:/app
      depends_on:
        - kafka1
        - kafka2
        - kafka3
        - kafka-producer
        - spark-master
        - spark-worker
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 8G
          reservations:
            cpus: '0.25'
            memory: 5G
      restart: always


    nifi:
      image: apache/nifi:latest
      container_name: nifi
      networks:
        - cryptoViz
      ports:
        - "8443:8443"
      volumes:
        - ./nifi/templates:/opt/nifi/nifi-current/conf/templates
      environment:
        - SINGLE_USER_CREDENTIALS_USERNAME=${NIFI_USERNAME}
        - SINGLE_USER_CREDENTIALS_PASSWORD=${NIFI_PASSWORD}
        - NIFI_ZK_CONNECT_STRING="zookeeper:2181"
        - NIFI_USE_HTTP=true
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 2G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always


    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
      container_name: elasticsearch
      environment:
        - xpack.security.enabled=false
        - discovery.type=single-node
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      cap_add:
        - IPC_LOCK
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
        - 9300:9300
      depends_on:
        - kafka1
        - kafka2
        - kafka3
      networks:
        - data_network
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 1G
          reservations:
            cpus: '0.25'
            memory: 1G
      restart: always

    kibana:
      container_name: kibana
      image: docker.elastic.co/kibana/kibana:8.12.0
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      ports:
        - 5601:5601
      depends_on:
        - elasticsearch
      networks:
        - data_network
      restart: always

networks:
  cryptoViz: